datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/client"
}

enum BusType {
  TWO_PLUS_ONE
  TWO_PLUS_TWO
}

model Address {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  name      String
  country   String
  city      String
  district  String
  zipCode   String
  address   String
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("addresses")
}

model City {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // İlişkiler
  departureTrips Trip[] @relation("DepartureCity")
  arrivalTrips   Trip[] @relation("ArrivalCity")

  @@map("cities")
}

model Trip {
  id              String   @id @default(cuid())
  bus             Bus      @relation(fields: [busId], references: [id])
  busId           String
  
  // Şehir ilişkileri
  departureCity   City     @relation("DepartureCity", fields: [departureCityId], references: [id])
  departureCityId String
  arrivalCity     City     @relation("ArrivalCity", fields: [arrivalCityId], references: [id])
  arrivalCityId   String
  
  // Seyahat detayları
  departureTime   DateTime
  arrivalTime     DateTime
  price           Float
  availableSeats  Int
  isActive        Boolean  @default(true)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("trips")
}

model User {
  id                      String      @id @default(cuid())
  turkish_identity_number String
  firstName               String
  lastName                String
  phone                   String      @unique
  email                   String      @unique
  password                String
  birthDate               DateTime
  gender                  String
  emailVerified           DateTime?
  image                   String?
  addresses               Address[]
  passengers              Passenger[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Passenger {
  id                      String   @id @default(cuid())
  turkish_identity_number String
  firstName               String
  lastName                String
  birthDate               DateTime
  gender                  String
  user                    User?    @relation(fields: [userId], references: [id])
  userId                  String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@unique([userId, turkish_identity_number])
  @@map("passengers")
}

model Bus {
  id          String   @id @default(cuid())
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   String
  plateNumber String   @unique
  model       String
  capacity    Int
  type        BusType
  trips       Trip[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("buses")
}

model Company {
  id        String   @id @default(cuid())
  name      String
  logo      String?
  buses     Bus[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("companies")
}
